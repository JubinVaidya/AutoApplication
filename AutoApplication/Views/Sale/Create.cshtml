@model AutoApplication.ViewModel.AutoSalesViewModel


<head>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</head>

@{
    Html.RenderPartial("_SuccessPopUp");
}
<div class="card card-outline-secondary" style="background-color: #FAFAFA; margin-top: 100px">
    <div class="card-body">
        <h3 class="text-center">Car Details</h3>
        <hr>
        <h4 style="margin-bottom:20px">
            @Model.Auto.AutoMakerName @Model.Auto.AutoModelName @Model.Auto.AutoModelYear
        </h4>
        <h7>
            <p style="margin-bottom:5px">Usage Status: &nbsp;&nbsp;@Model.Auto.AutoUsageStatus</p>
            <p style="margin-bottom:5px">Miles Travelled: &nbsp;&nbsp;@Model.Auto.AutoMilesTravelled miles</p>

            <p style="margin-bottom:5px; text-align: right; font-size:large; font-weight:bold">Total Amount Due: &nbsp;&nbsp;@string.Format("{0:C}", @Model.Auto.AutoListedPrice)</p>

        </h7>

    </div>
</div>
<br />
<hr />
@using (Html.BeginForm("CreateSale", "Sale", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-group" style="display:none">
        <label for=@Model.Auto.AutoID>@Model.Auto.AutoID</label>

    </div>
    <div class="form-group" style="display:none">
        @Html.LabelFor(m => m.Auto.AutoID)
        @Html.TextBoxFor(m => m.Auto.AutoID, new { @class = "form-control", @readonly = "readonly" })
    </div>
    <div class="form-group" style="display:none">
        @Html.LabelFor(m => m.Auto.AutoListedPrice)
        @Html.TextBoxFor(m => m.Auto.AutoListedPrice, new { @class = "form-control", @readonly = "readonly" })
    </div>

    <div class="card card-outline-secondary" style="background-color: #FAFAFA">
        <div class="card-body">
            <h3 class="text-center">Customer Details</h3>
            <hr>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Customer.CustomerFirstName)
                    @Html.TextBoxFor(m => m.Customer.CustomerFirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Customer.CustomerFirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Customer.CustomerLastName)
                    @Html.TextBoxFor(m => m.Customer.CustomerLastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Customer.CustomerLastName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Customer.CustomerStreetAddress)
                @Html.TextBoxFor(m => m.Customer.CustomerStreetAddress, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Customer.CustomerStreetAddress, "", new { @class = "text-danger" })
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Customer.CustomerSuiteNumber)
                    @Html.TextBoxFor(m => m.Customer.CustomerSuiteNumber, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Customer.CustomerSuiteNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(m => m.Customer.CustomerPhoneNumber)
                    @Html.TextBoxFor(m => m.Customer.CustomerPhoneNumber, new { @class = "form-control", })
                    @Html.ValidationMessageFor(m => m.Customer.CustomerPhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(m => m.Customer.CustomerCity)
                    @Html.TextBoxFor(m => m.Customer.CustomerCity, new { @class = "form-control", })
                    @Html.ValidationMessageFor(m => m.Customer.CustomerCity, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(m => m.Customer.CustomerState)
                    @Html.DropDownListFor((m => m.Customer.CustomerState), new SelectList(Model.ListStateNames), "Select Customer's State", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Customer.CustomerState, "", new { @class = "text-danger" })

                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(m => m.Customer.CustomerZipCode)
                    @Html.TextBoxFor(m => m.Customer.CustomerZipCode, new { @class = "form-control", })
                    @Html.ValidationMessageFor(m => m.Customer.CustomerZipCode, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
    </div>
    <br />
    <hr />

    <div class="card card-outline-secondary" style="background-color: #FAFAFA">
        <div class="card-body">
            <h3 class="text-center">Credit Card Payment</h3>
            <hr>
            <div class="form-group">
                @Html.LabelFor(m => m.Payment.PaymentNameOnCard)
                @Html.TextBoxFor(m => m.Payment.PaymentNameOnCard, new { @class = "form-control width50" })
                @Html.ValidationMessageFor(m => m.Payment.PaymentNameOnCard, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Payment.PaymentCardNumber)
                @Html.TextBoxFor(m => m.Payment.PaymentCardNumber, new { @class = "form-control width50" })
                @Html.ValidationMessageFor(m => m.Payment.PaymentCardNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Payment.PaymentCardExpiryDate)
                <br />
                @Html.EditorFor(m => m.Payment.PaymentCardExpiryDate, new { htmlAttributes = new { @class = "datepicker form-control width50" } })
                @Html.ValidationMessageFor(m => m.Payment.PaymentCardExpiryDate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Payment.PaymentSecurityCode)
                @Html.TextBoxFor(m => m.Payment.PaymentSecurityCode, new { @class = "form-control width50" })
                @Html.ValidationMessageFor(m => m.Payment.PaymentSecurityCode, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <br />
    <div class="bottom_btns float-right">
        <p class"text-right">
            <button type="submit" class="btn btn-primary">Confirm</button>
            @Html.ActionLink("Back to List", "Index", "Auto", null, new { @class = "btn btn-danger" })
        </p>
    </div>
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
@section scripts{

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @*<script>
            $(function () {
                $(".datepicker").datepicker({
                    dateFormat: "mm/dd/yy",
                    changeMonth: true,
                    changeYear: true,
                    yearRange: "2020: 2030"
                });
            });
        </script>*@
}

